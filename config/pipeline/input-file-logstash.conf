#start_position => string, one of ["beginning", "end"]
#mode => string, one of ["tail", "read"]
#file_completed_action : delete, log, log_and_delete
input {
   file {
      id => "jtl-input"
      path => ["${INPUT_PATH_JTL:${INPUT_PATH:/input}}/**.jtl","${INPUT_PATH_JTL:${INPUT_PATH:/input}}/**.csv"]
      mode => "${FILE_READ_MODE:tail}"
      start_position => "${FILE_START_POSITION:beginning}"
      exit_after_read => "${FILE_EXIT_AFTER_READ:false}"
      file_completed_action => "${FILE_COMPLETED_ACTION:log}"
      file_completed_log_path => "file_completed_log_path.log"
      add_field => {
         "origin" => "jtl"

      }
      codec => csv {
         autodetect_column_names => true
         convert => {
            "Connect" => "integer"
            "bytes" => "integer"
            "IdleTime" => "integer"
            "Latency" => "integer"
            "sentBytes" => "integer"
            "elapsed" => "integer"
            "allThreads" => "integer"
            "grpThreads" => "integer"
            "success" => "boolean"
            "SampleCount" => "integer"
            "ErrorCount" => "integer"
         }
      }
   }
   file {
      id => "statistics-input"
      path => ["${INPUT_PATH_STAT:${INPUT_PATH:/input}}/*.json"]
      mode => "read"
      exit_after_read => "${FILE_EXIT_AFTER_READ:false}"
      file_completed_action => "${FILE_COMPLETED_ACTION:log}"
      file_completed_log_path => "file_completed_log_path.log"
      add_field => {
         "origin" => "stat"


      }
      codec => multiline {
         pattern => "\s\},"
         negate => "true"
         what => "previous"
      }
   }


}
