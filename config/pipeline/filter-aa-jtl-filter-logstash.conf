filter {

   if [origin] == "jtl" {
      #parse Transaction

      ruby {
         code => "
            regex = event.get('[@metadata][filter_exclude_sampler_regex]')
            if (regex.to_java().isEmpty() )
               event.set('[@metadata][filtred_exclude]', 'false')
            else
               patern = java::util::regex::Pattern.compile(regex)
               if patern.match(event.get('label'))
                  event.set('[@metadata][filtred_exclude]', 'true')
               else
                  event.set('[@metadata][filtred_exclude]', 'false')
               end
            end
         "
         tag_on_exception => "_rubyexception_filtred_exclude"
      }

      if [@metadata][filtred_exclude] == "true" {
         drop {
         }
      }
      else {

         ruby {
            code => "
               regex = event.get('[@metadata][filter_include_sampler_regex]')
               if (regex.to_java().isEmpty() )
               event.set('[@metadata][filtred_include]', 'true')
               else
               patern = java::util::regex::Pattern.compile(regex)
               if patern.match(event.get('label'))
                  event.set('[@metadata][filtred_include]', 'true')
               else
                  event.set('[@metadata][filtred_include]', 'false')
               end
               end
            "
            tag_on_exception => "_rubyexception_filtred_include"
         }
         if [@metadata][filtred_include] == "false" {
            drop {
            }
         }
      }
   }
}